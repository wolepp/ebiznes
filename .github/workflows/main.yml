name: Build containers and rebuild azure

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Prepare cache
        id: prep
        run |
          TAG="latest"
          IMAGE_BASE="docker.io/${{ secrets.REGISTRY_USERNAME }}/ebiznes-base:${TAG}
          IMAGE_BACKEND="docker.io/${{ secrets.REGISTRY_USERNAME }}/ebiznes-backend:${TAG}
          IMAGE_FRONTEND="docker.io/${{ secrets.REGISTRY_USERNAME }}/ebiznes-frontend:${TAG}
          echo ::set-output name=tagged_image_base::${IMAGE_BASE}:${TAG}
          echo ::set-output name=tagged_image_backend::${IMAGE_BACKEND}:${TAG}
          echo ::set-output name=tagged_image_frontend::${IMAGE_FRONTEND}:${TAG}
          echo ::set-output name=tag::${TAG}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push base image
        id: docker_build_base
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.base
          push: true
          tags: ${{ steps.prep.outputs.tagged_image_base }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build and push backend image
        id: docker_build_backend
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.backend
          push: true
          tags: ${{ steps.prep.outputs.tagged_image_base }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build and push frontend image
        id: docker_build_frontend
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.frontend
          push: true
          tags: ${{ steps.prep.outputs.tagged_image_base }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

