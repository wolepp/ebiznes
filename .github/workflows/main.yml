name: Build containers and rebuild azure

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Prepare cache
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE_BASE="docker.io/${{ secrets.REGISTRY_USERNAME }}/ebiznes-base"
          IMAGE_BACKEND="docker.io/${{ secrets.REGISTRY_USERNAME }}/ebiznes-backend"
          IMAGE_FRONTEND="docker.io/${{ secrets.REGISTRY_USERNAME }}/ebiznes-frontend"
          echo ::set-output name=tagged_image_base::${IMAGE_BASE}:${TAG}
          echo ::set-output name=tagged_image_backend::${IMAGE_BACKEND}:${TAG}
          echo ::set-output name=tagged_image_frontend::${IMAGE_FRONTEND}:${TAG}
          echo ::set-output name=tag::${TAG}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build and push base image
        id: docker_build_base
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.base
          push: true
          tags: ${{ steps.prep.outputs.tagged_image_base }}
          cache-from: type=local,src=/tmp/.buildx-cache/base
          cache-to: type=local,dest=/tmp/.buildx-cache-new/base

      - name: Build and push backend image
        id: docker_build_backend
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.backend
          push: true
          tags: ${{ steps.prep.outputs.tagged_image_backend }}
          cache-from: type=local,src=/tmp/.buildx-cache/backend
          cache-to: type=local,dest=/tmp/.buildx-cache-new/backend

      - name: Build and push frontend image
        id: docker_build_frontend
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.frontend
          push: true
          tags: ${{ steps.prep.outputs.tagged_image_frontend }}
          cache-from: type=local,src=/tmp/.buildx-cache/frontend
          cache-to: type=local,dest=/tmp/.buildx-cache-new/frontend

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

#  Using hook in Docker Hub - Azure updates after images are pushed
#      - name: Deploy to Azure
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: 'wlepich-ebiznes'
#          slot-name: 'production'
#          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#          images: 'index.docker.io/${{ secrets.REGISTRY_USERNAME }}/ebiznes-frontend:${{ steps.prep.outputs.tag }}'
